#  Template maven-build

#  This template allows you to test and build your Java project with Maven.
#  The workflow allows running tests, code checkstyle and security scans on the default branch.

# Prerequisites: pom.xml and appropriate project structure should exist in the repository.

image: python:3.9-buster

options:
  docker: true
  max-time: 10
  size: 2x
definitions:
  services:
    docker:
      memory: 6144
pipelines:
  default:
    - step:
        name: Build
        caches:
          - docker
          - pip
        script:
          - docker build -t kmw:solrkafka-test -f Dockerfile-test . # (might help if it's not working) --no-cache
          - pip install docker-compose
        after-script:
          # Collect checkstyle results, if any, and convert to Bitbucket Code Insights.
          - pipe: atlassian/checkstyle-report:0.2.0
        services:
          - docker
    - parallel:
        - step:
            name: Security Scan
            script:
              # Run a security scan for sensitive data.
              # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
              - pipe: atlassian/git-secrets-scan:0.4.3
        - step:
            name: Single Node Test
            caches:
              - docker
              - pip
            services:
              - docker
            script:
              - pip install docker-compose
              - docker-compose -f docker-compose-test.yml --verbose up -d --no-color
              - sleep 20
              - docker exec -t solrkafka_solr java -cp "/var/solr/data/lib/*" com.kmwllc.solr.solrkafka.test.SingleNodeTest -d
            after-script:
              - docker-compose -f docker-compose-test.yml --verbose down -v --remove-orphans
        - step:
            name: Multi Node Test Normal Routing
            caches:
              - docker
              - pip
            services:
              - docker
            script:
              - pip install docker-compose
              - docker-compose -f docker-compose-cloud-test.yml --verbose up --no-color &
              - sleep 20
              - docker exec -t solrkafka_solr_8983 java -cp "/var/solr/data/lib/*" com.kmwllc.solr.solrkafka.test.MultiNodeTest -d --tlogs 2 --pulls 2
            after-script:
              - docker-compose -f docker-compose-test.yml --verbose down -v --remove-orphans
        - step:
            name: Multi Node Test All Shard Routing
            caches:
              - docker
              - pip
            services:
              - docker
            script:
              - pip install docker-compose
              - docker-compose -f docker-compose-cloud-test.yml --verbose up -d --no-color
              - sleep 20
              - docker exec -t solrkafka_solr_8983 java -cp "/var/solr/data/lib/*" com.kmwllc.solr.solrkafka.test.MultiNodeTest -d -i
            after-script:
              - docker-compose -f docker-compose-test.yml --verbose down -v --remove-orphans
        - step:
            name: Multi Node Kill Test
            caches:
              - docker
              - pip
            services:
              - docker
            script:
              - pip install docker-compose
              - docker-compose -f docker-compose-cloud-test.yml --verbose up -d --no-color
              - sleep 20
              - docker exec -t solrkafka_solr_8983 java -cp "/var/solr/data/lib/*" com.kmwllc.solr.solrkafka.test.MultiNodeKillTest -d
            after-script:
              - docker-compose -f docker-compose-test.yml --verbose down -v --remove-orphans
#        - step:
#            name: Failure Test
#            caches:
#              - docker
#              - pip
#            services:
#              - docker
#            script:
#              - pip install docker-compose
#              - docker-compose -f docker-compose-cloud-test.yml --verbose up -d --no-color
#              - sleep 20
#              - docker exec -t solrkafka_solr_8983 java -cp "/var/solr/data/lib/*" com.kmwllc.solr.solrkafka.test.FailureTest
#            after-script:
#              - docker-compose -f docker-compose-test.yml --verbose down -v --remove-orphans
